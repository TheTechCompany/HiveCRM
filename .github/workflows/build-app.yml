name: Build Apps - Prod (HiveConnect)
on:
  push:
    branches:
      - main

jobs: 

  build_server:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to dockerhub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            thetechcompany/hiveconnect-backend
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push 
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          context: ./
          file: ./packages/app/hive-connect-backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_ENV=github
  
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build_coreapps:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        apps: [ frontend ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 22.x
      - run: yarn

      - run: export REACT_APP_API="https://api.hexhive.io"
      - run: export REACT_APP_URL="https://go.hexhive.io"
      - run: export PUBLIC_PATH="https://apps.hexhive.io/hiveconnect-${{matrix.apps}}/"
      
      - name: Build web
        run: (export REACT_APP_URL="https://go.hexhive.io" PUBLIC_PATH="https://apps.hexhive.io/hiveconnect-${{matrix.apps}}/" REACT_APP_API="https://api.hexhive.io" NODE_ENV=production CI=false; lerna run build --scope @hiveconnect-app/${{ matrix.apps }} --include-dependencies)
    
      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      

      - name: Upload new web-build
        run: |
          aws s3 sync packages/app/hive-connect-${{ matrix.apps }}/dist/ s3://${{ secrets.PROD_APP_BUCKET }}/hiveconnect-${{matrix.apps}} --delete


  push_infra:
    name: Update Pulumi Infra
    runs-on: ubuntu-latest
    needs: [build_server]
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - uses: actions/setup-node@v2
        with:
          node-version: 18.x
        
      - run: echo "IMAGE_TAG=sha-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
              
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ap-southeast-2
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - run: yarn install --frozen-lockfile
        
      - name: Setup stack
        run: |
          echo "STACK_NAME=ultraviolet/hiveconnect-prod" >> $GITHUB_ENV
          echo "HEXHIVE_API_KEY=${{ secrets.PROD_SYNC_KEY }}" >> $GITHUB_ENV
          echo "HEXHIVE_API_URL=${{ secrets.PROD_API_URL }}" >> $GITHUB_ENV
        if: ${{ github.ref == 'refs/heads/main' }}
              

      - name: Update infrastructure
        uses: pulumi/actions@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          command: up
          stack-name: ${{env.STACK_NAME}}
          work-dir: ./packages/infrastructure/main
        env:
          HEXHIVE_SECRET: ${{ secrets.HEXHIVE_SECRET }}
          HEXHIVE_API_KEY: ${{ env.HEXHIVE_API_KEY }}
          HEXHIVE_API_URL: ${{ env.HEXHIVE_API_URL }}
          BACKEND_ENTRYPOINT: http://hiveconnect-prod-svc.default.svc.cluster.local/graphql
          ENTRYPOINT: https://apps.hexhive.io/hiveconnect-frontend/hiveconnect-app-frontend.js
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
         
  deploy-db:
    name: Deploy DB Migration
    runs-on: ubuntu-latest
    needs: [build_server]
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}  
    steps: 
        - uses: actions/checkout@v2
        
        - uses: actions/setup-node@v2
          with:
            node-version: 18.x
        
        - name: Install Pulumi CLI
          uses: pulumi/setup-pulumi@v2
        
        - run: pulumi stack select ultraviolet/hiveconnect-prod
          working-directory: ./packages/infrastructure/main
        
        - run: mkdir ~/.kube/
     
        - name: Setup stack
          run: |
            echo "DB_NAME=ultraviolet/hexhive-db/db-prod" >> $GITHUB_ENV
            echo "NAMESPACE=db-prod" >> $GITHUB_ENV
          if: ${{ github.ref == 'refs/heads/main' }}
                
        - run: pulumi stack -s ultraviolet/base-infrastructure/prod output k3sconfig > ~/.kube/config
          working-directory: ./packages/infrastructure/main
          id: kube_config
        
        - run: echo "::set-output name=postgres::$(pulumi stack -s ${{env.DB_NAME}} output postgres_url)" 
          working-directory: ./packages/infrastructure/main
          id: postgres_url
              
        - run: echo "::set-output name=pass::$(pulumi stack -s ${{env.DB_NAME}} output postgres_pass )" 
          working-directory: ./packages/infrastructure/main
          id: postgres_pass
        
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-region: ap-southeast-2
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              
        - uses: azure/setup-kubectl@v2.0
          with:
            version: "v1.23.5"
        
              # - run: aws eks update-kubeconfig --name hexhive-cluster-eksCluster-506b63f
           
        - run: kubectl -n ${{ env.NAMESPACE }} port-forward service/${{ steps.postgres_url.outputs.postgres }} 5432:5432 &
              
        - run: sleep 30s
        
        - run: npx prisma migrate deploy
          env:
            DATABASE_URL: postgresql://postgres:${{ steps.postgres_pass.outputs.pass }}@localhost:5432/hiveconnect
          working-directory: ./packages/app/hivecommand-db/